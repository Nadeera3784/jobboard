version: '3.9'

networks:
  jobboard-network:
    driver: bridge
    name: jobboard-network

volumes:
  redis-data:
  mongodb-data:

services:

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - '3000:3000'
    volumes:
      - ./apps/backend:/apps/backend   
      - /apps/backend/node_modules
    networks:
      - jobboard-network

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - '5173:5173'
    volumes:
      - ./apps/frontend:/apps/frontend   
      - /apps/frontend/node_modules
    networks:
      - jobboard-network

  redis:
    build:
      context: ./docker/redis
      dockerfile:
        Dockerfile
    restart: always
    platform: linux/amd64
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf", "--appendonly", "yes" ]
    ports:
      - 6379:6379
    networks:
      - jobboard-network
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:cached
      - redis-data:/data

  mongodb:
    image: mongo:4.2
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb-data:/data/db
    networks:
      - jobboard-network

  mongo-express:
    image: mongo-express:latest
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb
    networks:
      - jobboard-network
